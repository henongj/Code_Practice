#include<iostream>
#include<queue>
using namespace std;

int main(void)
{
	priority_queue<int> pq;
	pq.push(0);
	int daSom;    int saver;    int numOfvalue; int counter = 0;
	cin >> numOfvalue;    cin >> daSom;
	for(int i = 0 ; i < numOfvalue - 1 ; i++)
	{//
		cin >> saver;
		if(daSom <= saver)// 매수해야 하는 사람들을 죄다 넣는다
			pq.push(saver);
	}
	if(numOfvalue == 1)
	{
		cout << 0;
		return 0;
	}
	saver = 0;
	while(pq.top() >= daSom)
	{
//		cout << "pq.top() : " << pq.top() << "  daSom vote : " << daSom << "\n";
		saver = pq.top() - 1; // steal 1 vote
		pq.push(saver);
		pq.pop();
		counter = counter + 1; //check
		daSom = daSom + 1;		
	}
	cout << counter;
	return 0;
}

/*
greedy 선거
국회의원 후보 N명 // M명의 주민이 선거한다
기호 1번을 매수해서 당선되게 하려고 한다.
당선기준 == 모든 사람의 득표수 보다 많은 득표수를 가질 때
즉 5 7 6 7 -> 7 6 6 6 으로 2, 4번 후보 뽑는사람 1명씩 매수하면 됨

매수해야하는 사람이 최솟값이 되게 프로그램을 작성

N은 1000 이하 자연수 M은 1000이하 자연수

input
3 5 7 7
output
2

input
5 7 4 11 9 10
output : 3

input
1 1
output : 0


우선순위 큐를 이용해서
다솜이보다 표가 많은 사람은 계속해서 한 표씩 매수한다
즉 if -> dasom < t 이면 push, t--, counter++

다솜이와 표가 같다면?
한 표만 뜯으면 된다 ㅇ.ㅇ

*/
