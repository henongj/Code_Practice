#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef struct kaigi{
	unsigned int start;
	unsigned int end;
} kaigi;

bool cmp(const kaigi &first , const kaigi &second);

int main() {
	
	int n = 0;
	int result = 0;
	while(!(1<= n && n <= 100000))
		cin >> n;
	kaigi karr[n];
	for(int i = 0 ; i < n ; i++)
		scanf("%d %d", &(karr[i].start),&(karr[i].end));

	sort(karr,karr+n,cmp);

	unsigned int start = 0;
	unsigned int end = 0;
//	for(int i = 0 ; i < n ; i ++)
//		cout << "i : " << i << " " << "start end" << karr[i].start << " " << karr[i].end << endl;
	for(int i = 0 ; i < n ; i ++){
		if((end <= karr[i].start) && ((end <= karr[i].end) && (start <= karr[i].end))){
//			cout << "start : " << start << " " << "end : " << end << endl;
			result++;
			start = karr[i].start;
			end = karr[i].end;
		}
	}
	cout << result;
	return 0;
}

bool cmp(const kaigi &first , const kaigi &second){

	if(first.end == second.end)
		return first.start<second.start;
	else
		return first.end < second.end;
}
