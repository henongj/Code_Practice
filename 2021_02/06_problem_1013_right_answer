#include<iostream>
#include<string>
using namespace std;

inline void printYes(void)
{
	cout << "YES\n";
}

inline void printNo(void)
{
	cout << "NO\n";
}

void readPattern(int index , char state , string pattern)
{
	if(state == 'N')
	{
		printNo();
		return;
	}
	
	if(index < pattern.length())
	{
		if(state == 'S')
		{
			if(pattern[index] == '0')
				readPattern(index+1 , 'A' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'C' , pattern);
		}
		else if(state == 'A')
		{
//			cout << "state : A\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'N' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'B' , pattern);
		}
		else if(state == 'B')
		{
//			cout << "state : B\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'A' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'C' , pattern);
		}
		else if(state == 'C')
		{
//			cout << "state : C\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'D' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'N' , pattern);
		}
		else if(state == 'D')
		{
	//		cout << "state : D\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'E' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'N' , pattern);
		}
		else if(state == 'E')
		{
//			cout << "state : E\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'E' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'F' , pattern);
		}
		else if(state == 'F')
		{
//			cout << "state : F\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'A' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'G' , pattern);
		}
		else if(state == 'G')
		{
//			cout << "state : G\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'H' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'G' , pattern);
		}		
		else if(state == 'H')
		{
//			cout << "state : H\n";
			if(pattern[index] == '0')
				readPattern(index+1 , 'E' , pattern);
			else if(pattern[index] == '1')
				readPattern(index+1 , 'B' , pattern);
		}
	}
	else
	{//패턴을 다 읽었으면
		if(state == 'A' || state == 'D' || state == 'E' || state == 'H')
		{
			printNo();
			return;
		}
		else
		{
			printYes();
			return;
		}
	}
}

int main(void)
{
	string pattern;
	int t;
	cin >> t;
	for(int i = 0 ; i < t ; i++)
	{
		cin >> pattern;
		if(pattern.length() == 1)
			printNo();
		else
			readPattern(0,'S',pattern);
	}
	
	return 0;
}

/*
S = start
A = 01패턴 0
B = 01패턴 1

첫 값이 0일 경우 -> A 시작
첫 값이 1일 경우 -> C 시작

0	S <- 0	S -> A
1	S <- 1	S -> C

0 -> 1	A <- 1	A -> B // 01패턴 1
0 -> 0	A <- 0	A -> N

1 -> 0	B <- 0	B -> A // 01패턴 다시 시작
1 -> 1	B <- 1	B -> C // 100+1+ 패턴 시작

1 -> 1	C <- 1	C -> N
1 -> 0	C <- 0	C -> D // 100+1+ 의 첫0

0 -> 0	D <- 0	D -> E //  0+ 
0 -> 1	D <- 1	D -> N //

0 -> 0	E <- 0	E -> E
0 -> 1	E <- 1	E -> F  /1+

1 -> 0	F <- 0	F -> G // 0을 만났는데 1"0"0+1+ , "0"1+  인지 모름
1 -> 1	F <- 1	F -> F

0 -> 0	G <- 0	G -> E
0 -> 1	G <- 1	G -> B

N -> cout NO
*/
